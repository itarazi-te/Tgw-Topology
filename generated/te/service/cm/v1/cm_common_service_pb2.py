# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: te/service/cm/v1/cm_common_service.proto
# Protobuf Python Version: 5.28.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    3,
    '',
    'te/service/cm/v1/cm_common_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from te.service.cm.v1 import cm_snapshot_file_response_pb2 as te_dot_service_dot_cm_dot_v1_dot_cm__snapshot__file__response__pb2
from te.service.cm.v1 import cm_snapshot_pb2 as te_dot_service_dot_cm_dot_v1_dot_cm__snapshot__pb2
from te.service.cm.v1 import cm_azr_snapshot_pb2 as te_dot_service_dot_cm_dot_v1_dot_cm__azr__snapshot__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(te/service/cm/v1/cm_common_service.proto\x12\x10te.service.cm.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\x30te/service/cm/v1/cm_snapshot_file_response.proto\x1a\"te/service/cm/v1/cm_snapshot.proto\x1a&te/service/cm/v1/cm_azr_snapshot.proto\"C\n\x14SnapshotFilesRequest\x12\x10\n\x03\x61id\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x11\n\tpartition\x18\x02 \x03(\tB\x06\n\x04_aid\"\x9b\x01\n\x12\x41ssetsByIdsRequest\x12\x10\n\x03\x61id\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x1a\n\rtimestamp_sec\x18\x02 \x01(\x03H\x01\x88\x01\x01\x12\x19\n\x0cinterval_sec\x18\x03 \x01(\x05H\x02\x88\x01\x01\x12\x11\n\tasset_ids\x18\x04 \x03(\tB\x06\n\x04_aidB\x10\n\x0e_timestamp_secB\x0f\n\r_interval_sec\"\x99\x02\n\x1a\x41ssetsByIdsOvertimeRequest\x12\x10\n\x03\x61id\x18\x01 \x01(\tH\x00\x88\x01\x01\x12 \n\x13start_timestamp_sec\x18\x02 \x01(\x03H\x01\x88\x01\x01\x12\x1e\n\x11\x65nd_timestamp_sec\x18\x03 \x01(\x03H\x02\x88\x01\x01\x12\x19\n\x0cinterval_sec\x18\x04 \x01(\x05H\x03\x88\x01\x01\x12\x11\n\tasset_ids\x18\x05 \x03(\t\x12\x32\n\x0cmetric_types\x18\x06 \x03(\x0e\x32\x1c.te.service.cm.v1.MetricTypeB\x06\n\x04_aidB\x16\n\x14_start_timestamp_secB\x14\n\x12_end_timestamp_secB\x0f\n\r_interval_sec\"f\n\x1c\x41ssetMetricsOvertimeResponse\x12\x46\n\x16\x61sset_metrics_overtime\x18\x01 \x03(\x0b\x32&.te.service.cm.v1.AssetMetricsOvertime\"~\n\x14\x41ssetMetricsOvertime\x12\x15\n\x08\x61sset_id\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x42\n\x14\x61sset_metrics_bucket\x18\x02 \x03(\x0b\x32$.te.service.cm.v1.AssetMetricsBucketB\x0b\n\t_asset_id\"\xec\x02\n\x12\x41ssetMetricsBucket\x12\x1a\n\rtimestamp_sec\x18\x01 \x01(\x03H\x00\x88\x01\x01\x12@\n\x10\x65xternal_metrics\x18\x02 \x01(\x0b\x32!.te.service.cm.v1.ExternalMetricsH\x01\x88\x01\x01\x12I\n\x19\x65xternal_rejected_metrics\x18\x03 \x01(\x0b\x32!.te.service.cm.v1.ExternalMetricsH\x02\x88\x01\x01\x12\x19\n\x0c\x65xternal_cps\x18\x04 \x01(\x03H\x03\x88\x01\x01\x12\"\n\x15\x65xternal_rejected_cps\x18\x05 \x01(\x03H\x04\x88\x01\x01\x42\x10\n\x0e_timestamp_secB\x13\n\x11_external_metricsB\x1c\n\x1a_external_rejected_metricsB\x0f\n\r_external_cpsB\x18\n\x16_external_rejected_cps\"S\n\x0f\x45xternalMetrics\x12\x14\n\x07ingress\x18\x01 \x01(\x03H\x00\x88\x01\x01\x12\x13\n\x06\x65gress\x18\x02 \x01(\x03H\x01\x88\x01\x01\x42\n\n\x08_ingressB\t\n\x07_egress\"\xf3/\n\rAssetResponse\x12\x44\n\x12global_accelerator\x18\n \x01(\x0b\x32&.te.service.cm.v1.AwsGlobalAcceleratorH\x00\x12\x31\n\x08instance\x18\x0b \x01(\x0b\x32\x1d.te.service.cm.v1.AwsInstanceH\x00\x12Q\n\x19\x61pplication_load_balancer\x18\x0c \x01(\x0b\x32,.te.service.cm.v1.AwsApplicationLoadBalancerH\x00\x12I\n\x15network_load_balancer\x18\r \x01(\x0b\x32(.te.service.cm.v1.AwsNetworkLoadBalancerH\x00\x12I\n\x15\x63lassic_load_balancer\x18\x0e \x01(\x0b\x32(.te.service.cm.v1.AwsClassicLoadBalancerH\x00\x12\x38\n\x0ctarget_group\x18\x0f \x01(\x0b\x32 .te.service.cm.v1.AwsTargetGroupH\x00\x12\'\n\x03\x65ni\x18\x10 \x01(\x0b\x32\x18.te.service.cm.v1.AwsEniH\x00\x12-\n\x06subnet\x18\x11 \x01(\x0b\x32\x1b.te.service.cm.v1.AwsSubnetH\x00\x12\'\n\x03vpc\x18\x12 \x01(\x0b\x32\x18.te.service.cm.v1.AwsVpcH\x00\x12\x36\n\x0broute_table\x18\x13 \x01(\x0b\x32\x1f.te.service.cm.v1.AwsRouteTableH\x00\x12\x36\n\x0bnetwork_acl\x18\x14 \x01(\x0b\x32\x1f.te.service.cm.v1.AwsNetworkAclH\x00\x12<\n\x0esecurity_group\x18\x15 \x01(\x0b\x32\".te.service.cm.v1.AwsSecurityGroupH\x00\x12>\n\x0ftransit_gateway\x18\x16 \x01(\x0b\x32#.te.service.cm.v1.AwsTransitGatewayH\x00\x12S\n\x1atransit_gateway_attachment\x18\x17 \x01(\x0b\x32-.te.service.cm.v1.AwsTransitGatewayAttachmentH\x00\x12T\n\x1btransit_gateway_route_table\x18\x18 \x01(\x0b\x32-.te.service.cm.v1.AwsTransitGatewayRouteTableH\x00\x12\x62\n\"transit_gateway_peering_attachment\x18\x19 \x01(\x0b\x32\x34.te.service.cm.v1.AwsTransitGatewayPeeringAttachmentH\x00\x12\x33\n\x0blb_listener\x18\x1a \x01(\x0b\x32\x1c.te.service.cm.v1.LbListenerH\x00\x12<\n\x10lb_listener_rule\x18\x1b \x01(\x0b\x32 .te.service.cm.v1.LbListenerRuleH\x00\x12\x33\n\x0bga_listener\x18\x1c \x01(\x0b\x32\x1c.te.service.cm.v1.GaListenerH\x00\x12O\n\x1aga_listener_endpoint_group\x18\x1d \x01(\x0b\x32).te.service.cm.v1.GaListenerEndpointGroupH\x00\x12K\n\x16\x64irect_connect_gateway\x18\x1e \x01(\x0b\x32).te.service.cm.v1.AwsDirectConnectGatewayH\x00\x12\x45\n\x13managed_prefix_list\x18\x1f \x01(\x0b\x32&.te.service.cm.v1.AwsManagedPrefixListH\x00\x12\x38\n\x0cvpc_endpoint\x18  \x01(\x0b\x32 .te.service.cm.v1.AwsVpcEndpointH\x00\x12\x36\n\x0bvpn_gateway\x18! \x01(\x0b\x32\x1f.te.service.cm.v1.AwsVpnGatewayH\x00\x12^\n direct_connect_virtual_interface\x18\" \x01(\x0b\x32\x32.te.service.cm.v1.AwsDirectConnectVirtualInterfaceH\x00\x12I\n\x15gateway_load_balancer\x18$ \x01(\x0b\x32(.te.service.cm.v1.AwsGatewayLoadBalancerH\x00\x12\x35\n\nazr_subnet\x18% \x01(\x0b\x32\x1f.te.service.cm.azr.v1.AzrSubnetH\x00\x12\x31\n\x08\x61zr_vnet\x18& \x01(\x0b\x32\x1d.te.service.cm.azr.v1.AzrVnetH\x00\x12/\n\x07\x61zr_nic\x18\' \x01(\x0b\x32\x1c.te.service.cm.azr.v1.AzrNicH\x00\x12-\n\x06\x61zr_vm\x18( \x01(\x0b\x32\x1b.te.service.cm.azr.v1.AzrVMH\x00\x12\x42\n\x11\x61zr_load_balancer\x18) \x01(\x0b\x32%.te.service.cm.azr.v1.AzrLoadBalancerH\x00\x12/\n\x07\x61zr_nsg\x18* \x01(\x0b\x32\x1c.te.service.cm.azr.v1.AzrNsgH\x00\x12@\n\x10\x61zr_backend_pool\x18+ \x01(\x0b\x32$.te.service.cm.azr.v1.AzrBackendPoolH\x00\x12/\n\x07\x61zr_asg\x18, \x01(\x0b\x32\x1c.te.service.cm.azr.v1.AzrAsgH\x00\x12K\n\x16\x61zr_load_balancer_rule\x18- \x01(\x0b\x32).te.service.cm.azr.v1.AzrLoadBalancerRuleH\x00\x12\\\n\x1f\x61zr_load_balancer_outbound_rule\x18. \x01(\x0b\x32\x31.te.service.cm.azr.v1.AzrLoadBalancerOutboundRuleH\x00\x12\x61\n\"azr_load_balancer_inbound_nat_rule\x18/ \x01(\x0b\x32\x33.te.service.cm.azr.v1.AzrLoadBalancerInboundNATRuleH\x00\x12N\n\x17\x61zr_application_gateway\x18\x30 \x01(\x0b\x32+.te.service.cm.azr.v1.AzrApplicationGatewayH\x00\x12h\n%azr_application_gateway_http_listener\x18\x31 \x01(\x0b\x32\x37.te.service.cm.azr.v1.AzrApplicationGatewayHttpListenerH\x00\x12\x83\x01\n3azr_application_gateway_backend_http_configurations\x18\x32 \x01(\x0b\x32\x44.te.service.cm.azr.v1.AzrApplicationGatewayBackendHttpConfigurationsH\x00\x12u\n,azr_application_gateway_request_routing_rule\x18\x33 \x01(\x0b\x32=.te.service.cm.azr.v1.AzrApplicationGatewayRequestRoutingRuleH\x00\x12\x7f\n1azr_application_gateway_frontend_ip_configuration\x18\x34 \x01(\x0b\x32\x42.te.service.cm.azr.v1.AzrApplicationGatewayFrontendIpConfigurationH\x00\x12z\n.azr_application_gateway_redirect_configuration\x18\x35 \x01(\x0b\x32@.te.service.cm.azr.v1.AzrApplicationGatewayRedirectConfigurationH\x00\x12<\n\x0e\x61zr_front_door\x18\x36 \x01(\x0b\x32\".te.service.cm.azr.v1.AzrFrontDoorH\x00\x12T\n\x1b\x61zr_front_door_routing_rule\x18\x37 \x01(\x0b\x32-.te.service.cm.azr.v1.AzrFrontDoorRoutingRuleH\x00\x12T\n\x1b\x61zr_front_door_backend_pool\x18\x38 \x01(\x0b\x32-.te.service.cm.azr.v1.AzrFrontDoorBackendPoolH\x00\x12^\n azr_front_door_frontend_endpoint\x18\x39 \x01(\x0b\x32\x32.te.service.cm.azr.v1.AzrFrontDoorFrontendEndpointH\x00\x12T\n\x1b\x61zr_front_door_rules_engine\x18: \x01(\x0b\x32-.te.service.cm.azr.v1.AzrFrontDoorRulesEngineH\x00\x12>\n\x0f\x61zr_nat_gateway\x18; \x01(\x0b\x32#.te.service.cm.azr.v1.AzrNatGatewayH\x00\x12\x35\n\nazr_origin\x18< \x01(\x0b\x32\x1f.te.service.cm.azr.v1.AzrOriginH\x00\x12@\n\x10\x61zr_origin_group\x18= \x01(\x0b\x32$.te.service.cm.azr.v1.AzrOriginGroupH\x00\x12>\n\x0f\x61zr_afd_profile\x18> \x01(\x0b\x32#.te.service.cm.azr.v1.AzrAfdProfileH\x00\x12\x65\n$azr_application_gateway_url_path_map\x18? \x01(\x0b\x32\x35.te.service.cm.azr.v1.AzrApplicationGatewayUrlPathMapH\x00\x12I\n\x15\x61zr_public_ip_address\x18@ \x01(\x0b\x32(.te.service.cm.azr.v1.AzrPublicIpAddressH\x00\x12@\n\x10\x61zr_afd_endpoint\x18\x41 \x01(\x0b\x32$.te.service.cm.azr.v1.AzrAfdEndpointH\x00\x12:\n\razr_afd_route\x18\x42 \x01(\x0b\x32!.te.service.cm.azr.v1.AzrAfdRouteH\x00\x12?\n\x10\x61zr_afd_rule_set\x18\x43 \x01(\x0b\x32#.te.service.cm.azr.v1.AzrAfdRuleSetH\x00\x12\x38\n\x0c\x61zr_afd_rule\x18\x44 \x01(\x0b\x32 .te.service.cm.azr.v1.AzrAfdRuleH\x00\x12s\n+azr_load_balancer_frontend_ip_configuration\x18\x45 \x01(\x0b\x32<.te.service.cm.azr.v1.AzrLoadBalancerFrontendIpConfigurationH\x00\x12I\n\x15\x61zr_afd_custom_domain\x18\x46 \x01(\x0b\x32(.te.service.cm.azr.v1.AzrAfdCustomDomainH\x00\x12>\n\x0f\x61zr_route_table\x18G \x01(\x0b\x32#.te.service.cm.azr.v1.AzrRouteTableH\x00\x12\x33\n\tazr_route\x18H \x01(\x0b\x32\x1e.te.service.cm.azr.v1.AzrRouteH\x00\x12L\n\x16\x61zr_kubernetes_cluster\x18I \x01(\x0b\x32*.te.service.cm.azr.v1.AzrKubernetesClusterH\x00\x12G\n\x14\x61zr_afd_origin_group\x18J \x01(\x0b\x32\'.te.service.cm.azr.v1.AzrAfdOriginGroupH\x00\x12;\n\razr_afd_group\x18K \x01(\x0b\x32\".te.service.cm.azr.v1.AzrAfdOriginH\x00\x12]\n\x1f\x61zr_application_gateway_backend\x18L \x01(\x0b\x32\x32.te.service.cm.azr.v1.AzrApplicationGatewayBackendH\x00\x12Q\n\x19\x61zr_express_route_circuit\x18M \x01(\x0b\x32,.te.service.cm.azr.v1.AzrExpressRouteCircuitH\x00\x12\x62\n\"azr_express_route_cross_connection\x18N \x01(\x0b\x32\x34.te.service.cm.azr.v1.AzrExpressRouteCrossConnectionH\x00\x12O\n\x18\x61zr_nic_ip_configuration\x18O \x01(\x0b\x32+.te.service.cm.azr.v1.AzrNicIpConfigurationH\x00\x12?\n\x10\x61zr_vm_scale_set\x18P \x01(\x0b\x32#.te.service.cm.azr.v1.AzrVmScaleSetH\x00\x12Q\n\x19\x61zr_express_route_gateway\x18Q \x01(\x0b\x32,.te.service.cm.azr.v1.AzrExpressRouteGatewayH\x00\x12W\n\x1c\x61zr_express_route_connection\x18R \x01(\x0b\x32/.te.service.cm.azr.v1.AzrExpressRouteConnectionH\x00\x12@\n\x10\x61zr_vnet_peering\x18S \x01(\x0b\x32$.te.service.cm.azr.v1.AzrVnetPeeringH\x00\x12>\n\x0f\x61zr_virtual_hub\x18T \x01(\x0b\x32#.te.service.cm.azr.v1.AzrVirtualHubH\x00\x12`\n!azr_express_route_circuit_peering\x18U \x01(\x0b\x32\x33.te.service.cm.azr.v1.AzrExpressRouteCircuitPeeringH\x00\x12U\n\x1b\x61zr_virtual_network_gateway\x18V \x01(\x0b\x32..te.service.cm.azr.v1.AzrVirtualNetworkGatewayH\x00\x12\x64\n#azr_hub_virtual_network_connections\x18W \x01(\x0b\x32\x35.te.service.cm.azr.v1.AzrHubVirtualNetworkConnectionsH\x00\x12K\n\x16vpc_peering_connection\x18X \x01(\x0b\x32).te.service.cm.v1.AwsVpcPeeringConnectionH\x00\x12\x44\n\x13\x61zr_vm_scale_set_vm\x18Y \x01(\x0b\x32%.te.service.cm.azr.v1.AzrVmScaleSetVmH\x00\x12S\n\x1a\x61zr_storage_blob_container\x18Z \x01(\x0b\x32-.te.service.cm.azr.v1.AzrStorageBlobContainerH\x00\x12\x32\n\ts3_bucket\x18[ \x01(\x0b\x32\x1d.te.service.cm.v1.AwsS3BucketH\x00\x12\x43\n\x18\x63loud_front_distribution\x18\\ \x01(\x0b\x32\x1f.te.service.cm.v1.AwsCloudFrontH\x00\x42\x07\n\x05\x61sset*r\n\nMetricType\x12\x17\n\x13\x41\x43\x43\x45PTED_THROUGHPUT\x10\x00\x12\x17\n\x13REJECTED_THROUGHPUT\x10\x01\x12\x18\n\x14\x41\x43\x43\x45PTED_CONNECTIONS\x10\x02\x12\x18\n\x14REJECTED_CONNECTIONS\x10\x03\x32\xbf\x02\n\x0f\x43MCommonService\x12\x64\n\x0fGetSnapshotFile\x12&.te.service.cm.v1.SnapshotFilesRequest\x1a\'.te.service.cm.v1.SnapshotFilesResponse0\x01\x12p\n\x10GetAssetsMetrics\x12,.te.service.cm.v1.AssetsByIdsOvertimeRequest\x1a..te.service.cm.v1.AssetMetricsOvertimeResponse\x12T\n\tGetAssets\x12$.te.service.cm.v1.AssetsByIdsRequest\x1a\x1f.te.service.cm.v1.AssetResponse0\x01\x42\"\n\x1e\x63om.thousandeyes.service.cm.v1P\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'te.service.cm.v1.cm_common_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\036com.thousandeyes.service.cm.v1P\001'
  _globals['_METRICTYPE']._serialized_start=7547
  _globals['_METRICTYPE']._serialized_end=7661
  _globals['_SNAPSHOTFILESREQUEST']._serialized_start=218
  _globals['_SNAPSHOTFILESREQUEST']._serialized_end=285
  _globals['_ASSETSBYIDSREQUEST']._serialized_start=288
  _globals['_ASSETSBYIDSREQUEST']._serialized_end=443
  _globals['_ASSETSBYIDSOVERTIMEREQUEST']._serialized_start=446
  _globals['_ASSETSBYIDSOVERTIMEREQUEST']._serialized_end=727
  _globals['_ASSETMETRICSOVERTIMERESPONSE']._serialized_start=729
  _globals['_ASSETMETRICSOVERTIMERESPONSE']._serialized_end=831
  _globals['_ASSETMETRICSOVERTIME']._serialized_start=833
  _globals['_ASSETMETRICSOVERTIME']._serialized_end=959
  _globals['_ASSETMETRICSBUCKET']._serialized_start=962
  _globals['_ASSETMETRICSBUCKET']._serialized_end=1326
  _globals['_EXTERNALMETRICS']._serialized_start=1328
  _globals['_EXTERNALMETRICS']._serialized_end=1411
  _globals['_ASSETRESPONSE']._serialized_start=1414
  _globals['_ASSETRESPONSE']._serialized_end=7545
  _globals['_CMCOMMONSERVICE']._serialized_start=7664
  _globals['_CMCOMMONSERVICE']._serialized_end=7983
# @@protoc_insertion_point(module_scope)
